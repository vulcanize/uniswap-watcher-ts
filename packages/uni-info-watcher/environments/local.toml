[server]
  host = "127.0.0.1"
  port = 3004
  # Use mode demo when running watcher locally.
  # Mode demo whitelists all tokens so that entity values get updated.
  mode = "prod"
  kind = "active"

  # Checkpointing state.
  checkpointing = true

  # Checkpoint interval in number of blocks.
  checkpointInterval = 2000

  # Enable state creation
  enableState = false

  # Max block range for which to return events in eventsInRange GQL query.
  # Use -1 for skipping check on block range.
  maxEventsBlockRange = 1000

  # Interval in number of blocks at which to clear entities cache.
  clearEntitiesCacheInterval = 1000

  # Boolean to skip updating entity fields required in state creation and not required in the frontend.
  skipStateFieldsUpdate = false

  # Boolean to load GQL query nested entity relations sequentially.
  loadRelationsSequential = false

  # Max GQL API requests to process simultaneously (defaults to 1).
  maxSimultaneousRequests = 50

  # GQL cache settings
  [server.gqlCache]
    enabled = true

    # Max in-memory cache size (in bytes) (default 8 MB)
    # maxCacheSize

    # GQL cache-control max-age settings (in seconds)
    maxAge = 15
    timeTravelMaxAge = 86400 # 1 day

[metrics]
  host = "127.0.0.1"
  port = 9004
    [metrics.gql]
    port = 9005

[database]
  type = "postgres"
  host = "localhost"
  port = 5432
  database = "uni-info-watcher"
  username = "postgres"
  password = "postgres"
  synchronize = true
  logging = false
  maxQueryExecutionTime = 100

  [database.extra]
    # maximum number of clients the pool should contain
    max = 20

[upstream]
  [upstream.ethServer]
    gqlApiEndpoint = "http://127.0.0.1:8082/graphql"
    rpcProviderEndpoint = "http://127.0.0.1:8081"

  [upstream.cache]
    name = "requests"
    enabled = false
    deleteOnStart = false

  [upstream.uniWatcher]
    gqlEndpoint = "http://127.0.0.1:3003/graphql"
    gqlSubscriptionEndpoint = "ws://127.0.0.1:3003/graphql"

  [upstream.tokenWatcher]
    gqlEndpoint = "http://127.0.0.1:3001/graphql"
    gqlSubscriptionEndpoint = "ws://127.0.0.1:3001/graphql"

[jobQueue]
  dbConnectionString = "postgres://postgres:postgres@localhost/uni-info-watcher-job-queue"
  maxCompletionLagInSecs = 300
  jobDelayInMilliSecs = 1000
  eventsInBatch = 50
  subgraphEventsOrder = true
  blockDelayInMilliSecs = 2000
  prefetchBlocksInMem = true
  prefetchBlockCount = 10
